#!/usr/bin/env python
# -*- coding: utf-8 -*-

from iBrewFolders import AppFolders

from smarter.SmarterProtocol import *
from smarter.SmarterInterface import *

import sys

from  ConfigParser import *

#------------------------------------------------------
# iBrew: iKettle Interface
#
# Legacy Edtion
#
# https://github.com/Tristan79/iBrew
#
# Copyright © 2016-2017 Tristan (@monkeycat.nl). All Rights Reserved
#
# The conundrum struggle
#------------------------------------------------------

def app_info():
    print "iBrew: Legacy iKettle Interface"
    print "iBrew: The conundrum struggle © 2016-2017 Tristan (@monkeycat.nl). All Rights Reserved"
    print
    print "Please DONATE! Food, jokes, hugs and fun toys! To someone who deserves it!\n\nContribute any discoveries on https://github.com/Tristan79/iBrew/issues\n\nThis is untested code. Please report your findings!!! "
    print

def usage():
        print
        print "Usage: ibrewlegacy command host"
        print
        print "Commands"
        print "    heat  " + SmarterLegacy.textHeat
        print "    stop  " + SmarterLegacy.textStop
        print "      65  " + SmarterLegacy.text65c
        print "      80  " + SmarterLegacy.text80c
        print "      95  " + SmarterLegacy.text95c
        print "     100  " + SmarterLegacy.text100c
        print "    warm  " + SmarterLegacy.textWarm
        print "       5  " + SmarterLegacy.textWarm5m
        print "      10  " + SmarterLegacy.textWarm10m
        print "      20  " + SmarterLegacy.textWarm20m
        print "  status  " + SmarterLegacy.textStatus
        print 
        print "    host  ip or host address of the iKettle"
        print


#------------------------------------------------------
# iBrew MONITOR
#------------------------------------------------------

def monitor():
    print "iBrew: Press ctrl-c to stop"
    while True:
        try:
            import time
            time.sleep(1)
        except KeyboardInterrupt:
            break
        except Exception, e:
            logging.debug(str(e))
            break
    print


try:
    action = str(sys.argv[1])
    ip = str(sys.argv[2])
except IndexError:
    app_info()
    usage()
    sys.exit(2);
else:

    logger = logging.getLogger()
    logger.setLevel(logging.DEBUG)
    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    
    log_file = os.path.join(AppFolders.logs(), "ibrewlegacy.log")
    
    fh = logging.handlers.RotatingFileHandler(log_file, maxBytes=1048576, backupCount=4, encoding="UTF8")
    fh.setLevel(logging.DEBUG)
    fh.setFormatter(formatter)
    logger.addHandler(fh)
    
    # By default only do info level to console
    sh = logging.StreamHandler(sys.stdout)
    sh.setLevel(logging.INFO)
    sh.setFormatter(formatter)
    logger.addHandler(sh)

    sh.setLevel(logging.DEBUG)

    client = SmarterClientLegacy(ip)

    client.dump = True

    if action == "monitor":
        client.simulation = True
        client.connect()
        client.relay_start()
        monitor()
    else:
        try:
            r = client.send(SmarterLegacy.string_to_command(action))
            for i in r:
                print "iBrew Legacy: " + SmarterLegacy.string_response(i)
        except Exception, e:
            print "iBrew Legacy: Failed with " + str(e)
            sys.exit(3);

    client.disconnect()
